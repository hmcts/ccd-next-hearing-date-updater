#!groovy

@Library("Infrastructure")

import uk.gov.hmcts.contino.GradleBuilder

def type = "java"
def product = "ccd"
def component = "next-hearing-date-updater"
def branchesToSync = ['demo','perftest']

GradleBuilder builder = new GradleBuilder(this, product)
def secrets = [
  'ccd-${env}': [
    secret('ccd-api-gateway-oauth2-client-secret', 'CCD_API_GATEWAY_OAUTH2_CLIENT_SECRET'),
    secret('ccd-caseworker-autotest-email', 'CCD_CASEWORKER_AUTOTEST_EMAIL'),
    secret('ccd-caseworker-autotest-password', 'CCD_CASEWORKER_AUTOTEST_PASSWORD'),
    secret('ccd-befta-caseworker-1-pwd', 'CCD_BEFTA_CASEWORKER_1_PWD'),
    secret('ccd-befta-master-caseworker-pwd', 'CCD_BEFTA_MASTER_CASEWORKER_PWD'),
    secret('ccd-data-s2s-secret', 'IDAM_KEY_CCD_DATA_STORE'),
    secret('ccd-definition-s2s-secret', 'CCD_DEFINITION_STORE_S2S_SECRET'),
    secret('data-store-api-POSTGRES-DATABASE', 'DATA_STORE_DB_NAME'),
    secret('data-store-api-POSTGRES-USER', 'DATA_STORE_DB_USERNAME'),
    secret('data-store-api-POSTGRES-PASS', 'DATA_STORE_DB_PASSWORD'),
    secret('definition-importer-username', 'DEFINITION_IMPORTER_USERNAME'),
    secret('definition-importer-password', 'DEFINITION_IMPORTER_PASSWORD'),
    secret('ccd-api-gateway-oauth2-client-secret', 'API_GATEWAY_IDAM_SECRET'),
    secret('ccd-ELASTIC-SEARCH-URL', 'ELASTIC_SEARCH_HOSTS'),
    secret('ccd-ELASTIC-SEARCH-DATA-NODES-URL', 'ELASTIC_SEARCH_DATA_NODES_HOSTS')
  ],
  's2s-${env}': [
    secret('microservicekey-xui-webapp', 'BEFTA_S2S_CLIENT_SECRET'),
    secret('microservicekey-xui-webapp', 'BEFTA_S2S_CLIENT_SECRET_OF_XUI_WEBAPP'),
    secret('microservicekey-ccd-definition', 'BEFTA_S2S_CLIENT_SECRET_OF_CCD_DEFINITION'),
    secret('microservicekey-ccd-data', 'BEFTA_S2S_CLIENT_SECRET_OF_CCD_DATA')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

env.CI_BUILD = true
env.CCD_DATA_STORE_API_URL = "http://ccd-data-store-api-ccd-next-hearing-date-updater-pr-${CHANGE_ID}.service.core-compute-preview.internal"

// Other env variables needed for BEFTA.
env.S2S_URL_BASE = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
env.IDAM_API_URL_BASE = "https://idam-api.aat.platform.hmcts.net"
env.BEFTA_S2S_CLIENT_ID = "xui_webapp"
env.CCD_API_GATEWAY_OAUTH2_REDIRECT_URL = "https://www-ccd.aat.platform.hmcts.net/oauth2redirect"
env.BEFTA_S2S_CLIENT_ID_OF_XUI_WEBAPP = "xui_webapp"
env.BEFTA_S2S_CLIENT_ID_OF_CCD_DEFINITION = "ccd_definition"
env.BEFTA_S2S_CLIENT_ID_OF_CCD_DATA = "ccd_data"
env.BEFTA_OAUTH2_CLIENT_ID_OF_XUIWEBAPP = "xuiwebapp"
env.BEFTA_OAUTH2_REDIRECT_URI_OF_XUIWEBAPP = "https://www-ccd.aat.platform.hmcts.net/oauth2redirect"
env.BEFTA_OAUTH2_ACCESS_TOKEN_TYPE_OF_XUIWEBAPP = "OIDC"
env.BEFTA_OAUTH2_SCOPE_VARIABLES_OF_XUIWEBAPP = "profile openid roles manage-user create-user search-user"
env.CCD_API_GATEWAY_OAUTH2_CLIENT_ID = "ccd_gateway"

// temporary workaround for platform changes: turn BEFTA header checks to warning mode
env.BEFTA_RESPONSE_HEADER_CHECK_POLICY="JUST_WARN"

withPipeline(type, product, component) {
  after('test') {
    builder.gradle('integration')

    // hmcts/cnp-jenkins-library may fail to copy artifacts after checkstyle error so repeat command (see /src/uk/gov/hmcts/contino/GradleBuilder.groovy)
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/checkstyle/*.html'

    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/pmd/*.html'
  }

  enableAksStagingDeployment()
  disableLegacyDeployment()
  nonServiceApp()
  syncBranchesWithMaster(branchesToSync)
  loadVaultSecrets(secrets)

  onPR() {
    env.ENV='preview'
  }

  onNonPR() {
    env.ENV='aat'
  }

  after('akschartsinstall') {
    // Set required environment variables to run functional tests apart from one in vaults.

    // Execute functional tests
    echo "Verifying that functional test run correctly"
    try {
      builder.gradle('functional')
    } finally {
      junit '**/test-results/**/*.xml'
    }
  }

  after('functionalTest:preview') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "ccd-next-hearing-date-updater Functional Test Report"
    ]
  }

  after('functionalTest:aat') {
    junit 'build/test-results/functional/**/*.xml'
    archiveArtifacts 'build/reports/tests/functional/index.html'

    publishHTML target: [
      allowMissing         : true,
      alwaysLinkToLastBuild: true,
      keepAll              : true,
      reportDir            : "build/reports/tests/functional",
      reportFiles          : "index.html",
      reportName           : "ccd-next-hearing-date-updater Functional Test Report"
    ]
  }
}
