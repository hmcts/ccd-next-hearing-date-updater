plugins {
  id 'application'
  id 'pmd'
  id 'jacoco'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'org.springframework.boot' version '2.7.1'
  id 'com.github.ben-manes.versions' version '0.42.0'
  id 'org.sonarqube' version '3.3'
  id 'uk.gov.hmcts.java' version '0.12.27'
  id 'com.github.hmcts.rse-cft-lib' version '0.19.260'
}

group = 'uk.gov.hmcts.reform'
version = '0.0.1'

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

sourceSets {
  functionalTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }

  integrationTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integrationTest/java')
    }
    resources.srcDir file('src/integrationTest/resources')
  }

  smokeTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
}

configurations {
  functionalTestImplementation.extendsFrom testImplementation
  functionalTestRuntimeOnly.extendsFrom runtimeOnly

  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntimeOnly.extendsFrom runtimeOnly

  smokeTestImplementation.extendsFrom testImplementation
  smokeTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
  javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

checkstyle {
  toolVersion '10.3.1'
}

tasks.withType(Checkstyle) {
  exclude '**/package-info.java'
}

tasks.withType(Test) {
  useJUnitPlatform()

  testLogging {
    exceptionFormat = 'full'
  }
}

test {
  failFast = true
}

task functional(type: Test) {
  description = "Runs functional tests"
  group = "Verification"
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
}

task integration(type: Test) {
  description = "Runs integration tests"
  group = "Verification"
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath
  failFast = true
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.smokeTest.output.classesDirs
  classpath = sourceSets.smokeTest.runtimeClasspath
}

checkstyle {
  maxWarnings = 0
  toolVersion = '9.2.1'
  getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
  toolVersion = "6.41.0"
  sourceSets = [sourceSets.main, sourceSets.test, sourceSets.functionalTest, sourceSets.integrationTest, sourceSets.smokeTest]
  reportsDir = file("$project.buildDir/reports/pmd")
  // https://github.com/pmd/pmd/issues/876
  ruleSets = []
  ruleSetFiles = files("config/pmd/ruleset.xml")
}

jacocoTestReport {
  executionData(test, integration)
  reports {
    xml.required = true
    csv.required = false
    xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport
project.tasks['check'].dependsOn integration

sonarqube {
  properties {
    property "sonar.projectName", "Reform :: ccd-next-hearing-date-updater"
    property "sonar.projectKey", "uk.gov.hmcts.reform:ccd-next-hearing-date-updater"
    property "sonar.coverage.jacoco.xmlReportPaths", "${jacocoTestReport.reports.xml.destination.path}"
    property "sonar.exclusions",
      "src/main/java/uk/gov/hmcts/reform/next/hearing/date/updater/**/*.java"
  }
}

// before committing a change, make sure task still works
dependencyUpdates {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
    def regex = /^[0-9,.v-]+$/
    return !stableKeyword && !(version ==~ regex)
  }
  rejectVersionIf { selection -> // <---- notice how the closure argument is named
    return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = 0
  suppressionFile = 'config/owasp/suppressions.xml'

  analyzers {
    // Disable scanning of .NET related binaries
    assemblyEnabled = false
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  maven { url 'https://jitpack.io' }
}

ext {
  reformLogging = '6.0.1'
  lombokVersion = '1.18.24'
  jacksonVersion = '2.13.3'
}

dependencies {
  implementation group: 'javax.inject', name: 'javax.inject', version: '1'

  implementation group: 'org.springframework.boot', name: 'spring-boot-starter'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'

  implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: reformLogging
  implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: reformLogging
  implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.2'
  implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
  implementation group: 'com.microsoft.azure', name: 'applicationinsights-spring-boot-starter', version: '2.6.4'

  annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  implementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  testImplementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  integrationTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
  integrationTestImplementation group: 'org.projectlombok', name: 'lombok', version: lombokVersion

  testImplementation(platform('org.junit:junit-bom:5.8.2'))
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
    exclude group: 'junit', module: 'junit'
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '3.1.3'
  implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '9.3.1'
  implementation group: 'commons-validator', name: 'commons-validator', version: '1.7'

  cftlibImplementation group: 'org.springframework.boot', name: 'spring-boot-devtools'

  implementation group: 'com.github.hmcts', name: 'ccd-client', version: 'v4.9.1'

  implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.0.3'
  implementation group: 'com.github.hmcts', name: 'idam-java-client', version: '2.0.1'
  implementation group: 'org.springframework.security', name: 'spring-security-web'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-client'

  implementation group: 'org.springframework.security', name: 'spring-security-oauth2-jose'
  implementation group: 'org.springframework.security', name: 'spring-security-config'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-oauth2-resource-server'
  integrationTestImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.2'

  testImplementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-contract-stub-runner', version: '3.1.0'
  testImplementation group: 'org.testcontainers', name: 'junit-jupiter', version: '1.16.0'
  testImplementation group: 'org.testcontainers', name: 'elasticsearch', version: '1.17.5'

  integrationTestImplementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
  integrationTestImplementation group: 'org.elasticsearch', name: 'elasticsearch', version: '7.17.4'
  integrationTestImplementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: '7.17.4'
  integrationTestImplementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '7.17.4'

  testImplementation group: 'com.pivovarit', name: 'throwing-function', version: '1.5.1'

  cftlibImplementation group: 'org.springframework.boot', name: 'spring-boot-devtools'
}

mainClassName = 'uk.gov.hmcts.reform.next.hearing.date.updater.ApplicationBootstrap'

bootJar {
  archiveFileName = "ccd-next-hearing-date-updater.jar"

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}

// Gradle 7.x issue, workaround from: https://github.com/gradle/gradle/issues/17236#issuecomment-894768083
rootProject.tasks.named("processSmokeTestResources") {
  duplicatesStrategy = 'include'
}

rootProject.tasks.named("processIntegrationTestResources") {
  duplicatesStrategy = 'include'
}
wrapper {
  distributionType = Wrapper.DistributionType.ALL
}

bootWithCCD {
  authMode = uk.gov.hmcts.rse.AuthMode.Local
  environment("CRON_JOB_ENABLED", "false")
  environment("DATA_STORE_S2S_AUTHORISED_SERVICES", "ccd-next-hearing-updater-service")
  environment("RSE_LIB_S2S_PORT", 4502)
  environment("TEST_STUB_SERVICE_BASE_URL", "http://localhost:5555")
}
